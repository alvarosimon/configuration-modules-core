[%- tmphost = [ system.network.hostname, system.network.domainname ];
    fqdn = tmphost.join('.') -%]
[%- vcpus = 0 -%]
[%- sockets = 0 -%]
[%- cores = 0 -%]
[%- FOREACH item IN hardware.cpu -%]
[%-     vcpus = vcpus + item.cores -%]
[%-     cores = item.cores -%]
[%-     sockets = sockets + 1 -%]
[%- END -%]
[%- memory = 0 -%]
[%- FOREACH item IN hardware.ram -%]
[%- # size is the element, not the VMethod
    memory = memory + item.size -%]
[%- END -%]
[%- FOR pair IN system.opennebula.vnet.pairs %]
NIC = [
[%  FILTER indent -%]
[%    INCLUDE 'opennebula/network_level1.tt'
               data = pair ignoremac = 1 -%]
MODEL = "virtio",
NETWORK = "[% system.opennebula.vnet.${pair.key} %]",
NETWORK_UNAME = "oneadmin"
[%-     END %]
]
[%- END %]
NAME = "[%- fqdn -%]"
CONTEXT = [
[%     FILTER indent -%]
NETWORK = "YES",
HOSTNAME = "[%- fqdn %]",
TOKEN = "YES"
[%-    END %]
]
CPU = "[% vcpus * system.opennebula.cpuratio %]"
VCPU = "[% vcpus %]"
CPU_MODEL = [
[%     FILTER indent -%]
MODEL = "[%- system.opennebula.cpu_model %]"
[%-    END %]
]
DESCRIPTION = "[% hardware.model %] [% fqdn %]"
[%-    FOR pair IN hardware.harddisks.pairs %]
DISK = [
[%     FILTER indent -%]
IMAGE = "[%- fqdn %]_[% pair.key %]",
TARGET = "[% pair.key %]",
DEV_PREFIX = "vd",
[%        IF system.opennebula.diskcache.defined -%]
CACHE = "[% system.opennebula.diskcache %]",
[%        END -%]
[%        IF system.opennebula.permissions.owner.defined -%]
IMAGE_UNAME = "[% system.opennebula.permissions.owner %]"
[%        ELSE -%]
IMAGE_UNAME = "oneadmin"
[%        END -%]
[%-    END -%]
]
[%- END %]
GRAPHICS = [
[%     FILTER indent -%]
LISTEN = "0.0.0.0",
RANDOM_PASSWD = "YES",
TYPE = "[% system.opennebula.graphics %]"
[%-    END %]
]
MEMORY = "[% memory %]"
OS = [
[%     FILTER indent -%]
BOOT = "[% system.opennebula.boot.join(',') %]"
[%    END -%]
]
RAW = [
[%  INCLUDE 'opennebula/raw_level1.tt' FILTER indent -%]
]
[%- FOREACH item IN system.opennebula.pci %]
PCI = [
[%    INCLUDE 'opennebula/pci_level1.tt' data=item FILTER indent -%]
]
[%- END %]
[%- FOR device IN hardware.cards.pairs %]
[%      IF CCM.is_list(device.value);
            values = device.value;
        ELSE;
            values = device.value.values;
        END;
        FOR pair IN values %]
[%-         IF pair.pci.defined %]
PCI = [
[%          INCLUDE 'opennebula/pci_level1.tt' data=pair.pci FILTER indent -%]
]
[%-         END %]
[%-     END %]
[%- END %]
[%- FOREACH item IN system.opennebula.vmgroup %]
VMGROUP = [% INCLUDE 'opennebula/oned_level1.tt' data=item -%]
[%- END %]
[%- IF system.opennebula.labels.defined %]
LABELS = "[% system.opennebula.labels.join(',') %]"
[%- END %]
[%- IF system.opennebula.topology.pin_policy.defined %]
TOPOLOGY = [
[%      INCLUDE 'opennebula/topology_level1.tt' data=system.opennebula.topology FILTER indent -%]
]
[%- END %]
[%- FOREACH sched IN system.opennebula.placements %]
[%      sched.key FILTER upper %] = "[% sched.value %]"
[%- END %]
QUATTOR = 1
